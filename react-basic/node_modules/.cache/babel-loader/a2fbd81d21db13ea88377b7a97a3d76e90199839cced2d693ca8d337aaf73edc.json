{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\Study_React\\\\react-basic\\\\src\\\\App.js\";\nimport React from 'react';\n// 函數組件的創建和渲染\n// 創建\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Hello() {\n  const clickHandler = () => {\n    alert('函數組件中的事件被觸發了');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: clickHandler,\n    children: \"hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n\n// 渲染 <Hello/> 或 <Hello></Hello>\n\n//類組件的創建和渲染\n//創建\n_c = Hello;\nclass HelloComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    // 事件回調函數(標準寫法 避免this指向問題)\n    // 這樣寫 回調函數中的this指向的是當前的組件的實例對象\n    this.clickHandler = () => {\n      alert('類組件中的事件被觸發了');\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: this.clickHandler,\n      children: \"this is a class Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n}\n// 渲染 <HelloComponent/> 或 <HelloComponent></HelloComponent>\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Hello, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HelloComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Hello\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Hello","clickHandler","alert","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","HelloComponent","Component","constructor","args","render","App","className","_c2","$RefreshReg$"],"sources":["D:/GitHub/Study_React/react-basic/src/App.js"],"sourcesContent":["import React from 'react'\r\n// 函數組件的創建和渲染\r\n// 創建\r\nfunction Hello () {\r\n  const clickHandler = () => {\r\n    alert('函數組件中的事件被觸發了')\r\n  }\r\n  return <div onClick={clickHandler}>hello</div>\r\n}\r\n\r\n// 渲染 <Hello/> 或 <Hello></Hello>\r\n\r\n\r\n//類組件的創建和渲染\r\n//創建\r\nclass HelloComponent extends React.Component {\r\n  // 事件回調函數(標準寫法 避免this指向問題)\r\n  // 這樣寫 回調函數中的this指向的是當前的組件的實例對象\r\n  clickHandler = () => {\r\n    alert('類組件中的事件被觸發了')\r\n  }\r\n  render () {\r\n    return <div onClick={this.clickHandler}>this is a class Component</div>\r\n  }\r\n}\r\n// 渲染 <HelloComponent/> 或 <HelloComponent></HelloComponent>\r\n\r\nfunction App () {\r\n  return (\r\n    <div className=\"App\">\r\n      {/*渲染Hello組件*/}\r\n      <Hello />\r\n      {/*渲染類組件*/}\r\n      <HelloComponent />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,KAAKA,CAAA,EAAI;EAChB,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBC,KAAK,CAAC,cAAc,CAAC;EACvB,CAAC;EACD,oBAAOH,OAAA;IAAKI,OAAO,EAAEF,YAAa;IAAAG,QAAA,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAChD;;AAEA;;AAGA;AACA;AAAAC,EAAA,GAXST,KAAK;AAYd,MAAMU,cAAc,SAASb,KAAK,CAACc,SAAS,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAC3C;IACA;IAAA,KACAZ,YAAY,GAAG,MAAM;MACnBC,KAAK,CAAC,aAAa,CAAC;IACtB,CAAC;EAAA;EACDY,MAAMA,CAAA,EAAI;IACR,oBAAOf,OAAA;MAAKI,OAAO,EAAE,IAAI,CAACF,YAAa;MAAAG,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzE;AACF;AACA;;AAEA,SAASO,GAAGA,CAAA,EAAI;EACd,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAZ,QAAA,gBAElBL,OAAA,CAACC,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAETT,OAAA,CAACW,cAAc;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAACS,GAAA,GATQF,GAAG;AAWZ,eAAeA,GAAG;AAAA,IAAAN,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}